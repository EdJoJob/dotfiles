# Push and pop directories on directory stack
alias pu='pushd'
alias po='popd'

alias tmux='TERM=tmux-256color tmux'

activate() {
    deactivate &> /dev/null
    source $virtual_envs/$1/bin/activate
}

alias a2='activate python2'
alias a3='activate python3'
alias c3='activate cloudcte3'

# Basic directory operations
alias ...='cd ../..'
alias -- -='cd -'

# Show history
alias history='fc -l 1'

# List direcory contents
alias ls='gls --color=auto -F --group-directories-first'
alias lsa='ls -lah'
alias l='ls -lhA'
ldot () { if [[ -n $1 ]]; then; ls -d $1/.*; else; ls -d .*; fi }
#alias ldot='ls -d $PWD/$1/.*' # list all hidden files and dirs
alias ll='ls -lh'
alias la='ls -lha'
alias sl=ls # often screw this up

if which gfind &>/dev/null; then
    alias find=gfind
fi

if which gdate &>/dev/null; then
    alias date=gdate
fi

if which gcal &>/dev/null; then
    alias cal=gcal
fi

if whence hub &>/dev/null; then
    alias g=hub
fi

alias rs="rsync -avzh --progress"

alias :q='exit'
if whence nvim &>/dev/null; then
    alias vim='nvim'
    alias vi='nvim'
    alias v='fasd -f -e vi -b shada'
else
    alias vi='vim'
    alias v='fasd -f -e vi -b viminfo'
fi
alias :vim='vi'
alias .vimrc='vi ~/dots/editor/vimrc.symlink'
alias .zshrc='zgen reset && vi ~/dots/zsh/zshrc.symlink && exec zsh'
alias .aliases='vi ~/dots/zsh/aliases.zsh.symlink && exec zsh'
alias .tmux='vi ~/dots/tmux/tmux.conf.symlink && tmux source-file ~/.tmux'
alias .hg='vi ~/dots/hg/hgrc.symlink'
alias note='vi ~/note.rst'
alias :e='vi'
alias :make='make'
alias :h='man'
alias clc='clear'
alias ZQ='exit'
alias ZZ='exit'

alias c='clear'

alias t='todo.sh'
alias start_day='t recur && t archive && t report && clear && t'

alias lockscreen='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'

# python debuging with q
alias q='rm -f $TMPDIR/q && clear && touch $TMPDIR/q && tail -f $TMPDIR/q'

alias start_day_time='tail -n1 $TODO_DIR/report.txt | cut -dT -f 2 | cut -d " " -f 1'

time_since_start_day() {
    start_time=`gdate +%s -d $(start_day_time)`
    end_time=`gdate +%s -d $(gdate +%H:%M:%S)`

    diff=$(($end_time - $start_time))
    gdate +%H:%M:%S -ud @${diff}
}

owner() {
    hg annotate -u $1 | cut -f 1 -d ':' | sort | guniq -c | sort -nr | head -n 1 | gsed -re 's/[[:space:]]+/:/g' | cut -f 3 -d ':'
}

next() {
    hg resolve -l | grep '^U' | cut -f 2 -d ' ' | head -n 1
}

# Remember ${var:-str} means $var if not null else str
# Remember [[ -n str ]] is true if str is non-zero length
n() {
    local l_cluster l_instance
    if [[ ${+3} -eq 1 ]]; then
        # we have 3 args these are duty, cluster, instance
        l_cluster=${2:-${cluster}}
        ss $1-$3.$l_cluster.bne.nbb.co
        return
    fi
    if [[ ${+2} -eq 1 ]]; then
        if typset -i l_instance="$2" 2>/dev/null; then
            # $2 is numeric therefore the instance #
            if [[ -n $cluster ]]; then
                ss $1-$l_instance.$cluster.bne.nbb.co
            else
                echo 'You need to specify the $cluster'
            fi
            return
        else
            # $ 2 in non-numeric and therefore the cluster
            ss $1.$2.bne.nbb.co
            return
        fi
    fi
    # assuming only 1 as duty
    if [[ -n $cluster ]]; then
        ss $1.$cluster.bne.nbb.co
    else
        echo 'You need to specify the $cluster'
    fi

}

alert() {
    terminal-notifier -remove 'alert'
    local message exit_status
    message='has finished'
    if [[ -n $TMUX ]]; then
        message="${message} in $(tmux display-message -p '#S-#I:#W')"
    fi
    $@
    exit_status=$?
    if [[ $exit_status -ne 0 ]]; then
        exit_status="\[${exit_status}]"
    else
        exit_status=""
    fi
    terminal-notifier -title "${1}" -subtitle "${exit_status}" -message "${message}" -group 'alert'
}

alias alert-clear='terminal-notifier -remove "alert"'


lastcommand(){
    fc -l -LI -n '-1' | xargs echo -n | pbcopy
}

# vim:ft=zsh
