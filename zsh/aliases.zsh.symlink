# vim: fdm=marker
# Push and pop directories on directory stack
alias pu='pushd'
alias po='popd'

# Basic directory operations
alias ...='cd ../..'
alias -- -='cd -'

# Show history
alias history='fc -l 1'
# LS TOOLS {{{
if $(whence gls &>/dev/null); then
    alias ls='gls --color=auto -F --group-directories-first'
else
    alias ls='ls --color=auto -F --group-directories-first'
fi

# List direcory contents
alias lsa='ls -lah'
alias l='ls -lhA'
ldot () { if [[ -n $1 ]]; then; ls -d $1/.*; else; ls -d .*; fi }
#alias ldot='ls -d $PWD/$1/.*' # list all hidden files and dirs
if $(whence exa &>/dev/null); then
    alias ll='exa --group-directories-first --git --long --extended'
else
    alias ll='ls -lh'
fi
alias la='ls -lha'
alias sl=ls # often screw this up
# }}}
# TOOL REPLACEMENT {{{
alias tmux='TERM=tmux-256color tmux'

if which gfind &>/dev/null; then
    alias find=gfind
fi

if which gdate &>/dev/null; then
    alias date=gdate
fi

if which gcal &>/dev/null; then
    alias cal=gcal
fi

if whence hub &>/dev/null; then
    alias g=hub
fi

if whence nvim &>/dev/null; then
    alias vim='nvim'
    alias vi='nvim'
    alias v='fasd -f -e nvim -b shada'
else
    alias vi='vim'
    alias v='fasd -f -e vi -b viminfo'
fi
# }}}
alias rs="rsync -avzh --progress"
# QUICK FILE ACCESS {{{
alias .vimrc='vi ~/dots/editor/vimrc.symlink'
alias .local_vimrc='vi ~/.local_vimrc'

alias .zshrc='zgen reset && vi ~/dots/zsh/zshrc.symlink && exec zsh -l'
alias .aliases='vi ~/dots/zsh/aliases.zsh.symlink && exec zsh -l'
alias .local_zsh='vi ~/.local_environment.zsh && exec zsh -l'

alias .tmux='vi ~/dots/tmux/tmux.conf.symlink && tmux source-file ~/.tmux'
alias .local_tmux='vi ~/.local_tmux.conf'

alias .hg='vi ~/dots/hg/hgrc.symlink'

alias note='vi ~/Dropbox/note.rst'
alias diary='emacsclient -nc ~/Dropbox/org/diary.org &'
# }}}
# VIM MEMORY {{{
alias :vim='vi'
alias :q='exit'
alias :e='vi'
alias :make='make'
alias :h='man'
alias clc='clear'
alias ZQ='exit'
alias ZZ='exit'
# }}}
alias c='clear'
alias t='todo.sh'
# Chef {{{
alias tk='kitchen' # test kitchen
# }}}
# Docker {{{
alias dm=docker-machine
# }}}
# python debuging with q
alias q='rm -f $TMPDIR/q && clear && touch $TMPDIR/q && tail -f $TMPDIR/q'
# DAY MANAGEMENT {{{
alias start_day='t recur && t archive && t report && gdate +S%Y-%m-%dT%T >> ~/.start_time && clear && t && fortune ~/Dropbox/fortunes'
alias end_day='gdate +E%Y-%m-%dT%T >> ~/.start_time'
check_start_day() {
    if [[ $(tail -n1 ~/.start_time) == E* ]]; then
        start_day
    fi
}

start_day_time() {
    check_start_day
    tail -n1 ~/.start_time| cut -dT -f 2 | cut -d " " -f 1
}

time_since_start_day() {
    check_start_day
    start_time=`gdate +%s -d $(start_day_time)`
    end_time=`gdate +%s -d $(gdate +%H:%M:%S)`

    diff=$(($end_time - $start_time))
    gdate +%H:%M:%S -ud @${diff}
}
# }}}
# MERCURIAL AIDS {{{
owner() {
    hg annotate -u $1 | cut -f 1 -d ':' | sort | guniq -c | sort -nr | head -n 1 | gsed -re 's/[[:space:]]+/:/g' | cut -f 3 -d ':'
}

next() {
    hg resolve -l | grep '^U' | cut -f 2 -d ' ' | head -n 1
}

last-days-merges() {
    hg slog -r 'date(">yesterday") and merge() and not user("packaging-build7.bb")'
}
# }}}
# CLUSTER ACCESS {{{
cluster-node() {
    # Remember ${var:-str} means $var if not null else str
    # Remember [[ -n str ]] is true if str is non-zero length
    local l_cluster l_instance
    if [[ ${+3} -eq 1 ]]; then
        # we have 3 args these are duty, cluster, instance
        l_cluster=${2:-${cluster}}
        print $1-$3.$l_cluster.bne.nbb.co
        return
    fi
    if [[ ${+2} -eq 1 ]]; then
        if typset -i l_instance="$2" 2>/dev/null; then
            # $2 is numeric therefore the instance #
            if [[ -n $cluster ]]; then
                print $1-$l_instance.$cluster.bne.nbb.co
            else
                echo 'You need to specify the $cluster'
            fi
            return
        else
            # $ 2 in non-numeric and therefore the cluster
            print $1.$2.bne.nbb.co
            return
        fi
    fi
    # assuming only 1 as duty
    if [[ -n $cluster ]]; then
        print $1.$cluster.bne.nbb.co
    else
        print 'You need to specify the $cluster'
    fi
}

n() {
    ss $(cluster-node $@)
}
# }}}
# ALERT IN OSX {{{
alert() {
    terminal-notifier -remove 'alert'
    local message exit_status
    message='has finished'
    if [[ -n $TMUX ]]; then
        message="${message} in $(tmux display-message -p '#S-#I:#W')"
    fi
    $@
    exit_status=$?
    if [[ $exit_status -ne 0 ]]; then
        exit_status="\[${exit_status}]"
    else
        exit_status=""
    fi
    terminal-notifier -title "${1}" -subtitle "${exit_status}" -message "${message}" -group 'alert'
}

alias alert-clear='terminal-notifier -remove "alert"'
# }}}
lastcommand() {
    fc -l -LI -n '-1' | xargs echo -n | pbcopy
}

# vim:ft=zsh
