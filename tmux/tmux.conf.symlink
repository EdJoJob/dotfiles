set-option -g prefix `
unbind-key C-b
bind-key ` send-prefix

set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"
set -g history-limit 1000000

set-window-option -g mode-keys vi
set-option -g status-keys vi
set -g default-terminal "screen-256color"

set-window-option -g aggressive-resize on
set -g escape-time 0

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# get back clear
bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'

bind < resize-pane -L 2
bind > resize-pane -R 2
bind - resize-pane -D 2
bind + resize-pane -U 2

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-option -g utf8 on # utf8 support
set-option -g status-utf8 on

set-option -g main-pane-height 65
set-option -g other-pane-width 80

# splitting and cycling
set -g mouse on
unbind %
bind | split-window -h -c "#{pane_current_path}" # horizontal split
unbind '"'
bind \ split-window -v  -c "#{pane_current_path}" # vertical split
bind c new-window -c "#{pane_current_path}" -n ""# new window
set-window-option -g automatic-rename off # auto name
set-window-option -g allow-rename off

set-option -g pane-active-border-style fg=colour235,bg=colour235

# Create an environment that zsh can make sense of
set-environment -g tmuxTERM $TERM
set-environment -g INSCREEN yes
# set-environment TMUX_TITLE yes

# theme
set -g status-style bg=colour235
set -g status-left-length 100
tm_clock="#[fg=blue,bold]%a %d %h %R:%S#[fg=colour246,none]"
tm_user="#[fg=green,bold]$USER#[fg=green,none]@#[fg=green,bold]#h#[fg=colour246,none]"
tm_session="#[fg=green,none]#S#[fg=colour246,none]"
tm_battery="#[fg=green,none]#{battery_icon}#{battery_percentage}#[fg=colour246,none]"
tm_tunes="#[fg=green,none]#(osascript ~/dots/applescripts/tunes.applescript)#[fg=colour246,none]"
set -g status-left $tm_clock" ["$tm_user"] ["$tm_session"] ["$tm_battery"] #{prefix_highlight}"
set -g status-right "["$tm_tunes"]"
set -g status-justify centre

set -g window-status-format "#[fg=green,none]#I:#W#F"
set -g window-status-current-format "#[fg=colour246,none][#[fg=green,bold]#I:#W#F#[fg=colour246,none]]"
set -g status-interval 1

set -g @batt_charged_icon " "
set -g @batt_charging_icon "+"
set -g @batt_discharging_icon "-"
set -g @batt_attached_icon "â€¦"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/dots/tmux/tmux.symlink/plugins/'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

set -g @resurrect-capture-pane-contents 'on'

set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/dots/tmux/tmux.symlink/plugins/tpm/tpm'

# vim: ft=tmux
